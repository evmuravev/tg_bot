from telegram import Update
from telegram.ext import ContextTypes

from db.repositories.profiles import ProfilesRepository
from db.tasks import get_repository
from models.profile import ProfileStatus, ProfileUpdate


async def verify(update: Update, context: ContextTypes.DEFAULT_TYPE):
    status, user = update.callback_query.data.split(':')
    statuses = {
        'approve': ProfileStatus.approved,
        'reject': ProfileStatus.rejected
    }

    profile_repo = get_repository(ProfilesRepository, context)
    profile_update = {
        'status': statuses[status]
    }
    await profile_repo.update_profile(
        profile_update=ProfileUpdate(**profile_update),
        user_id=int(user)
    )
    match status:
        case 'approve':
            text = 'üôå–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–æ—à–µ–ª –º–æ–¥–µ—Ä–∞—Ü–∏—é! \
\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –∏ –æ—Ç–∫–ª–∏–∫–∞—Ç—å—Å—è –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏—è! /menu'
        case 'reject':
            text = 'üòû –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø—Ä–æ—Ñ–∏–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è! \
\n–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, –ø—Ä–æ—Å—Ç–æ —Å–æ–∑–¥–∞–π—Ç–µ –¥—Ä—É–≥–æ–π, —Å–ª–µ–¥—É—è –ø—Ä–∞–≤–∏–ª–∞–º /create_profile'

    await context.bot.send_message(
        chat_id=int(user),
        text=text,
    )
